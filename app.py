import streamlit as st
import requests
import json

# Configuraci√≥n de la p√°gina de Streamlit
st.set_page_config(page_title="Generador de Ensayos", page_icon="üìù", layout="wide")

# T√≠tulo de la aplicaci√≥n
st.title("Generador de Ensayos Acad√©micos")

# Entrada de la tesis
thesis = st.text_area("Ingrese la tesis para el ensayo:", height=100)

# Bot√≥n para generar el ensayo
if st.button("Generar Ensayo"):
    if thesis:
        # Acceder a la API key desde los secretos de Streamlit
        api_key = st.secrets["TOGETHER_API_KEY"]
        
        # URL de la API de Together
        url = "https://api.together.xyz/v1/completions"
        
        # Headers para la solicitud
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        
        # Prompt para el modelo
        prompt = f"""Desarrolla un ensayo acad√©mico fluido y cohesivo sobre la siguiente tesis:

{thesis}

Directrices para la estructura y el contenido del ensayo:

1. Introducci√≥n:
   - Presenta la tesis de manera clara y atractiva.
   - Proporciona un breve contexto que establezca la importancia del tema.

2. Cuerpo del ensayo:
   - Desarrolla varios argumentos que apoyen la tesis de manera fluida y natural.
   - No utilices numeraci√≥n, vi√±etas o subt√≠tulos para los argumentos.
   - Cada p√°rrafo debe centrarse en una idea principal que respalde la tesis.
   - Integra suavemente 15 citas relevantes de autores reconocidos a lo largo del texto.
   - Aseg√∫rate de que haya transiciones suaves y l√≥gicas entre los p√°rrafos, creando un flujo coherente de ideas.
   - Aborda posibles contraargumentos de manera equilibrada, reforzando tu posici√≥n.

3. Conclusi√≥n:
   - Resume los puntos principales sin repetirlos textualmente.
   - Reafirma la tesis de manera convincente.
   - Ofrece una reflexi√≥n final o implicaciones m√°s amplias del tema.

Estilo y tono:
- Mant√©n un estilo acad√©mico pero accesible, evitando jerga innecesaria.
- Usa un lenguaje preciso y variado para mantener el inter√©s del lector.
- Aseg√∫rate de que cada p√°rrafo fluya naturalmente hacia el siguiente, sin transiciones abruptas o forzadas.

Genera un ensayo que siga estas directrices, manteniendo una estructura coherente y un argumento persuasivo a lo largo del texto, sin recurrir a enumeraciones o listados expl√≠citos de puntos."""

        # Datos para la solicitud
        data = {
            "model": "togethercomputer/llama-2-70b-chat",
            "prompt": prompt,
            "max_tokens": 2048,
            "temperature": 0.7,
            "top_p": 0.7,
            "top_k": 50,
            "repetition_penalty": 1,
            "stop": ["<human>", "<assistant>"]
        }
        
        # Realizar la solicitud a la API
        try:
            response = requests.post(url, headers=headers, json=data)
            response.raise_for_status()
            essay = response.json()['choices'][0]['text']
            
            # Mostrar el ensayo generado sin encabezado adicional
            st.markdown(essay)
        except requests.exceptions.RequestException as e:
            st.error(f"Error al generar el ensayo: {e}")
            if response.text:
                st.error(f"Respuesta de la API: {response.text}")
    else:
        st.warning("Por favor, ingrese una tesis antes de generar el ensayo.")

# Instrucciones de uso
st.sidebar.header("Instrucciones")
st.sidebar.write("""
1. Ingrese la tesis para su ensayo en el campo de texto.
2. Haga clic en el bot√≥n "Generar Ensayo".
3. El ensayo generado aparecer√° debajo del bot√≥n.
4. El ensayo tendr√° una estructura fluida con argumentos bien desarrollados e integrados, citas relevantes y transiciones suaves entre p√°rrafos.
""")

# Nota sobre la API key
st.sidebar.info("Nota: La API key est√° segura en los secretos de Streamlit.")
